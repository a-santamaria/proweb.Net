#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="prowebNet")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertEstudianteXcurso(EstudianteXcurso instance);
  partial void UpdateEstudianteXcurso(EstudianteXcurso instance);
  partial void DeleteEstudianteXcurso(EstudianteXcurso instance);
  partial void InsertCurso2(Curso2 instance);
  partial void UpdateCurso2(Curso2 instance);
  partial void DeleteCurso2(Curso2 instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["prowebNetConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<EstudianteXcurso> EstudianteXcursos
	{
		get
		{
			return this.GetTable<EstudianteXcurso>();
		}
	}
	
	public System.Data.Linq.Table<Curso2> Curso2s
	{
		get
		{
			return this.GetTable<Curso2>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstudianteXcurso")]
public partial class EstudianteXcurso : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _username;
	
	private int _id_Curso;
	
	private EntityRef<Curso2> _Curso2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onid_CursoChanging(int value);
    partial void Onid_CursoChanged();
    #endregion
	
	public EstudianteXcurso()
	{
		this._Curso2 = default(EntityRef<Curso2>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Curso", DbType="Int NOT NULL")]
	public int id_Curso
	{
		get
		{
			return this._id_Curso;
		}
		set
		{
			if ((this._id_Curso != value))
			{
				if (this._Curso2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onid_CursoChanging(value);
				this.SendPropertyChanging();
				this._id_Curso = value;
				this.SendPropertyChanged("id_Curso");
				this.Onid_CursoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curso2_EstudianteXcurso", Storage="_Curso2", ThisKey="id_Curso", OtherKey="Id", IsForeignKey=true)]
	public Curso2 Curso2
	{
		get
		{
			return this._Curso2.Entity;
		}
		set
		{
			Curso2 previousValue = this._Curso2.Entity;
			if (((previousValue != value) 
						|| (this._Curso2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Curso2.Entity = null;
					previousValue.EstudianteXcursos.Remove(this);
				}
				this._Curso2.Entity = value;
				if ((value != null))
				{
					value.EstudianteXcursos.Add(this);
					this._id_Curso = value.Id;
				}
				else
				{
					this._id_Curso = default(int);
				}
				this.SendPropertyChanged("Curso2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Curso")]
public partial class Curso2 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Nombre;
	
	private int _Inscritas;
	
	private string _Descripcion;
	
	private int _Habilitado;
	
	private int _Max;
	
	private EntitySet<EstudianteXcurso> _EstudianteXcursos;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnInscritasChanging(int value);
    partial void OnInscritasChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnHabilitadoChanging(int value);
    partial void OnHabilitadoChanged();
    partial void OnMaxChanging(int value);
    partial void OnMaxChanged();
    #endregion
	
	public Curso2()
	{
		this._EstudianteXcursos = new EntitySet<EstudianteXcurso>(new Action<EstudianteXcurso>(this.attach_EstudianteXcursos), new Action<EstudianteXcurso>(this.detach_EstudianteXcursos));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inscritas", DbType="Int NOT NULL")]
	public int Inscritas
	{
		get
		{
			return this._Inscritas;
		}
		set
		{
			if ((this._Inscritas != value))
			{
				this.OnInscritasChanging(value);
				this.SendPropertyChanging();
				this._Inscritas = value;
				this.SendPropertyChanged("Inscritas");
				this.OnInscritasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Descripcion
	{
		get
		{
			return this._Descripcion;
		}
		set
		{
			if ((this._Descripcion != value))
			{
				this.OnDescripcionChanging(value);
				this.SendPropertyChanging();
				this._Descripcion = value;
				this.SendPropertyChanged("Descripcion");
				this.OnDescripcionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Int NOT NULL")]
	public int Habilitado
	{
		get
		{
			return this._Habilitado;
		}
		set
		{
			if ((this._Habilitado != value))
			{
				this.OnHabilitadoChanging(value);
				this.SendPropertyChanging();
				this._Habilitado = value;
				this.SendPropertyChanged("Habilitado");
				this.OnHabilitadoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="Int NOT NULL")]
	public int Max
	{
		get
		{
			return this._Max;
		}
		set
		{
			if ((this._Max != value))
			{
				this.OnMaxChanging(value);
				this.SendPropertyChanging();
				this._Max = value;
				this.SendPropertyChanged("Max");
				this.OnMaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curso2_EstudianteXcurso", Storage="_EstudianteXcursos", ThisKey="Id", OtherKey="id_Curso")]
	public EntitySet<EstudianteXcurso> EstudianteXcursos
	{
		get
		{
			return this._EstudianteXcursos;
		}
		set
		{
			this._EstudianteXcursos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EstudianteXcursos(EstudianteXcurso entity)
	{
		this.SendPropertyChanging();
		entity.Curso2 = this;
	}
	
	private void detach_EstudianteXcursos(EstudianteXcurso entity)
	{
		this.SendPropertyChanging();
		entity.Curso2 = null;
	}
}
#pragma warning restore 1591
